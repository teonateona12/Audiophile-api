openapi: 3.0.0
info:
  title: Audiophile
  description: Audiophile web API
  version: 0.1.9

servers:
  - url: https://audiophile-r04o.onrender.com/api
    description: production server
  - url: http://localhost:5000/api
    description: local server
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  /signup:
    post:
      tags:
        - user
      requestBody:
        description: add user
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
                id:
                  type: string
      responses:
        "200":
          description: user add
  /login:
    post:
      tags:
        - user
      requestBody:
        description: user authorization
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "200":
          description: login successfully
  /auth/me:
    get:
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: get user info
  /products:
    get:
      tags:
        - Products
      responses:
        "200":
          description: get all products info successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /cart:
    post:
      tags:
        - cart
      requestBody:
        description: add cart details
        required: true
        content:
          application/json:
            schema:
              type: "object"
              properties:
                name:
                  type: string
                number:
                  type: number
                price:
                  type: string
                image:
                  type: string
                userId:
                  type: string
      responses:
        "200":
          description: Cart detail added successfully
  /carts:
    get:
      tags:
        - Carts
      responses:
        "200":
          description: get all cart info successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  # /cart/update:
  #   put:
  #     tags:
  #       - Cart
  #     requestBody:
  #       description: update cart
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             type: object
  #             properties:
  #               name:
  #                 type: string
  #               price:
  #                 type: string
  #               number:
  #                 type: number
  #               image:
  #                 type: string
  #     responses:
  #       '200':
  #         description: cart updated
